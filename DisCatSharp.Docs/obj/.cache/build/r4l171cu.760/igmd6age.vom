<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>

    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
      <title>Transmitting | DisCatSharp Docs </title>
      <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
      <meta name="generator" content="docfx 2.60.0.0">
  
    <meta name="og:type" content="website">
    <meta name="og:image" content="https://cdn.aitsys.dev/file/data/kmjpa6f64me66dsm7dz3/PHID-FILE-degpfzd7nbw2q5yko5j7/logobig.png">
    <meta name="og:image:alt" content="DisCatSharp Logo">
    <meta name="og:image:type" content="image/png">
    <meta name="og:site_name" content="DisCatSharp Documentation">
    <link rel="apple-touch-icon" sizes="57x57" href="../../../../apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="../../../../apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="../../../../apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="../../../../apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="../../../../apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="../../../../apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="../../../../apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="../../../../apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="../../../../apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../../../../android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../../../../favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../../../../favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../../../../favicon-16x16.png">
    <link rel="manifest" href="/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="../../../../ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">
      <link rel="shortcut icon" href="../../../../favicon.ico">
      <script defer="" src='https://static.cloudflareinsights.com/beacon.min.js' data-cf-beacon='{"token": "de6c22ce0b3e4c17bb78c8c31b4e695b"}'></script>
      <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
      <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/night-owl.min.css">
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" integrity="sha384-EvBWSlnoFgZlXJvpzS+MAUEjvN7+gcCwH+qh7GRFOGgZO0PuwOFro7qPOJnLfe7l" crossorigin="anonymous">
      <link rel="stylesheet" href="../../../../src/styles/config.css">
      <link rel="stylesheet" href="../../../../src/styles/discord.css">
      <link rel="stylesheet" href="../../../../src/styles/dcs.css">
      <link rel="stylesheet" href="../../../../src/styles/main.css">
      <link rel="stylesheet" href="../../../../src/styles/colors.css">
      <link rel="stylesheet" href="../../../../src/styles/highlight/github-dark.min.css">
      <meta property="docfx:navrel" content="../../../../toc.html">
      <meta property="docfx:tocrel" content="../../../toc.html">
  
  <meta property="docfx:rel" content="../../../../">
  <meta property="docfx:newtab" content="true">
    </head>

    <body>
        <div class="top-navbar">
            <a class="burger-icon" onclick="toggleMenu()">
                <svg name="Hamburger" style="vertical-align: middle;" width="34" height="34" viewbox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" d="M20 6H4V9H20V6ZM4 10.999H20V13.999H4V10.999ZM4 15.999H20V18.999H4V15.999Z"></path></svg>
            </a>


            <a class="navbar-brand" href="../../../../index.html">
              <img id="logo" class="svg" src="../../../../logo.png" alt="DisCatSharp">
            </a>
        </div>

        <div class="body-content">
            <div id="blackout" class="blackout" onclick="toggleMenu()"></div>

            <nav id="sidebar" role="navigation">
                <div class="sidebar">

                    <div>
                      <div class="mobile-hide">

                        <a class="navbar-brand" href="../../../../index.html">
                          <img id="logo" class="svg" src="../../../../logo.png" alt="DisCatSharp">
                        </a>
                      </div>

                      <div class="sidesearch">
                        <form id="search" role="search" class="search">
                            <i class="bi bi-search search-icon"></i>
                            <input type="text" id="search-query" placeholder="Search" autocomplete="off">
                        </form>
                      </div>

                      <div id="navbar">
                      </div>
                    </div>
                    <div class="sidebar-item-separator"></div>

                        <div id="sidetoggle">
                          <div id="sidetoc"></div>
                        </div>
                </div>
                <div class="footer">
  <strong>Made with â™¥ by AITSYS</strong>
  
                </div>
            </nav>

            <main class="main-panel">

                <div id="search-results" style="display: none;">
                  <h1 class="search-list">Search Results for <span></span></h1>
                  <div class="sr-items">
                    <p class="lsearch"><i class="bi bi-hourglass-split index-loading"></i></p>
                  </div>
                  <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
                </div>

                <div role="main" class="hide-when-search">

                        <div class="subnav navbar navbar-default">
                          <div class="container hide-when-search" id="breadcrumb">
                            <ul class="breadcrumb">
                              <li></li>
                            </ul>
                          </div>
                        </div>

      <div id="sidetoggle">
        <div id="sidetoc"></div>
      </div>
						<div class="article row grid-right">

                    <article class="content wrap" id="_content" data-uid="modules_audio_voicenext_transmit">
<h2 id="transmitting-with-voicenext" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="6" sourceendlinenumber="6">Transmitting with VoiceNext</h2>

<h3 id="enable-voicenext" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="8" sourceendlinenumber="8">Enable VoiceNext</h3>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="9" sourceendlinenumber="9">Install the <code>DisCatSharp.VoiceNext</code> package from NuGet.</p>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="11" sourceendlinenumber="11"><img src="/images/voicenext_transmit_01.png" alt="NuGet Package Manager" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="11" sourceendlinenumber="11"></p>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="13" sourceendlinenumber="13">Then use the <code>UseVoiceNext</code> extension method on your instance of <code>DiscordClient</code>.</p>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="14" sourceendlinenumber="17"><code class="lang-cs">var discord = new DiscordClient();
discord.UseVoiceNext();
</code></pre><h3 id="connect" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="19" sourceendlinenumber="19">Connect</h3>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="20" sourceendlinenumber="20">Joining a voice channel is <em>very</em> easy; simply use the <code>ConnectAsync</code> extension method on <code>DiscordChannel</code>.</p>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="21" sourceendlinenumber="24"><code class="lang-cs">DiscordChannel channel;
VoiceNextConnection connection = await channel.ConnectAsync();
</code></pre><h3 id="transmit" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="26" sourceendlinenumber="26">Transmit</h3>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="27" sourceendlinenumber="27">Discord requires that we send Opus encoded stereo PCM audio data at a sample rate of 48,000 Hz.</p>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="29" sourceendlinenumber="31">You&#39;ll need to convert your audio source to PCM S16LE using your preferred program for media conversion, then read
that data into a <code>Stream</code> object or an array of <code>byte</code> to be used with VoiceNext. Opus encoding of the PCM data will
be done automatically by VoiceNext before sending it to Discord.</p>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="33" sourceendlinenumber="33">This example will use <a href="https://ffmpeg.org/about.html" data-raw-source="[ffmpeg](https://ffmpeg.org/about.html)" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="33" sourceendlinenumber="33">ffmpeg</a> to convert an MP3 file to a PCM stream.</p>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="34" sourceendlinenumber="45"><code class="lang-cs">var filePath = &quot;funiculi_funicula.mp3&quot;;
var ffmpeg = Process.Start(new ProcessStartInfo
{
    FileName = &quot;ffmpeg&quot;,
    Arguments = $@&quot;-i &quot;&quot;{filePath}&quot;&quot; -ac 2 -f s16le -ar 48000 pipe:1&quot;,
    RedirectStandardOutput = true,
    UseShellExecute = false
});

Stream pcm = ffmpeg.StandardOutput.BaseStream;
</code></pre><p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="47" sourceendlinenumber="49">Now that our audio is the correct format, we&#39;ll need to get a <em>transmit sink</em> for the channel we&#39;re connected to.
You can think of the transmit stream as our direct interface with a voice channel; any data written to one will be
processed by VoiceNext, queued, and sent to Discord which will then be output to the connected voice channel.</p>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="50" sourceendlinenumber="52"><code class="lang-cs">VoiceTransmitSink transmit = connection.GetTransmitSink();
</code></pre><p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="54" sourceendlinenumber="54">Once we have a transmit sink, we can &#39;play&#39; our audio by copying our PCM data to the transmit sink buffer.</p>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="55" sourceendlinenumber="57"><code class="lang-cs">await pcm.CopyToAsync(transmit);
</code></pre><p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="58" sourceendlinenumber="60"><code>Stream#CopyToAsync()</code> will copy PCM data from the input stream to the output sink, up to the sink&#39;s configured
capacity, at which point it will wait until it can copy more. This means that the call will hold the task&#39;s execution,
until such time that the entire input stream has been consumed, and enqueued in the sink.</p>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="62" sourceendlinenumber="64">This operation cannot be cancelled. If you&#39;d like to have finer control of the playback, you should instead consider
using <code>Stream#ReadAsync()</code> and <code>VoiceTransmitSink#WriteAsync()</code> to manually copy small portions of PCM data to the
transmit sink.</p>
<h3 id="disconnect" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="66" sourceendlinenumber="66">Disconnect</h3>
<p sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="67" sourceendlinenumber="67">Similar to joining, leaving a voice channel is rather straightforward.</p>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="68" sourceendlinenumber="73"><code class="lang-cs">var vnext = discord.GetVoiceNext();
var connection = vnext.GetConnection();

connection.Disconnect();
</code></pre><h2 id="example-commands" sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="75" sourceendlinenumber="75">Example Commands</h2>
<pre sourcefile="articles/modules/audio/voicenext/transmit.md" sourcestartlinenumber="76" sourceendlinenumber="118"><code class="lang-cs">[Command(&quot;join&quot;)]
public async Task JoinCommand(CommandContext ctx, DiscordChannel channel = null)
{
    channel ??= ctx.Member.VoiceState?.Channel;
    await channel.ConnectAsync();
}

[Command(&quot;play&quot;)]
public async Task PlayCommand(CommandContext ctx, string path)
{
    var vnext = ctx.Client.GetVoiceNext();
    var connection = vnext.GetConnection(ctx.Guild);

    var transmit = connection.GetTransmitSink();

    var pcm = ConvertAudioToPcm(path);
    await pcm.CopyToAsync(transmit);
    await pcm.DisposeAsync();
}

[Command(&quot;leave&quot;)]
public async Task LeaveCommand(CommandContext ctx)
{
    var vnext = ctx.Client.GetVoiceNext();
    var connection = vnext.GetConnection(ctx.Guild);

    connection.Disconnect();
}

private Stream ConvertAudioToPcm(string filePath)
{
    var ffmpeg = Process.Start(new ProcessStartInfo
    {
        FileName = &quot;ffmpeg&quot;,
        Arguments = $@&quot;-i &quot;&quot;{filePath}&quot;&quot; -ac 2 -f s16le -ar 48000 pipe:1&quot;,
        RedirectStandardOutput = true,
        UseShellExecute = false
    });

    return ffmpeg.StandardOutput.BaseStream;
}
</code></pre></article>
                </div>

                <div class="copyright-footer">
                    <span>&#169; Aiko IT Systems. All rights reserved.</span>
                </div>
            </div></main>
        </div>


        <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
        <script type="text/javascript" src="../../../../src/scripts/docfx.vendor.js"></script>
        <script type="text/javascript" src="../../../../src/scripts/docfx.js"></script>
        <script type="text/javascript" src="../../../../src/scripts/url.min.js"></script>
        <script type="text/javascript" src="../../../../src/scripts/highlight/highlight.min.js"></script>
        <script>hljs.highlightAll();</script>
        <script src="https://cdn.jsdelivr.net/npm/anchor-js/anchor.min.js"></script>
        <script type="text/javascript" src="../../../../src/scripts/jquery.twbsPagination.js"></script>
        <script type="text/javascript" src="../../../../src/scripts/dcs.js"></script>
        <script type="text/javascript" src="../../../../src/scripts/lunr.js"></script>
    </body>
</html>
